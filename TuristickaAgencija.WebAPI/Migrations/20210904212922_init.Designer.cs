// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuristickaAgencija.WebAPI.Database;

namespace TuristickaAgencija.WebAPI.Migrations
{
    [DbContext(typeof(TuristickaAgencijaContext))]
    [Migration("20210904212922_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzava");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "Srbija"
                        },
                        new
                        {
                            Id = 3,
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            Id = 4,
                            Naziv = "Crna Gora"
                        },
                        new
                        {
                            Id = 5,
                            Naziv = "Holandija"
                        },
                        new
                        {
                            Id = 6,
                            Naziv = "Turska"
                        },
                        new
                        {
                            Id = 7,
                            Naziv = "Austrija"
                        },
                        new
                        {
                            Id = 8,
                            Naziv = "Njemacka"
                        },
                        new
                        {
                            Id = 9,
                            Naziv = "Francuska"
                        },
                        new
                        {
                            Id = 10,
                            Naziv = "Spanija"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojZiroracuna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.ToTable("Firma");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresa = "Marsala Tita bb",
                            BrojZiroracuna = "0014478857897",
                            GradId = 1,
                            Naziv = "Centrotrans"
                        },
                        new
                        {
                            Id = 2,
                            Adresa = "Marsala Tita 28",
                            BrojZiroracuna = "1475893177897",
                            GradId = 2,
                            Naziv = "Autprevoz-Bus"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("NazivGrada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrzavaId = 1,
                            NazivGrada = "Sarajevo"
                        },
                        new
                        {
                            Id = 2,
                            DrzavaId = 1,
                            NazivGrada = "Mostar"
                        },
                        new
                        {
                            Id = 3,
                            DrzavaId = 2,
                            NazivGrada = "Beograd"
                        },
                        new
                        {
                            Id = 4,
                            DrzavaId = 3,
                            NazivGrada = "Zagreb"
                        },
                        new
                        {
                            Id = 5,
                            DrzavaId = 4,
                            NazivGrada = "Budva"
                        },
                        new
                        {
                            Id = 6,
                            DrzavaId = 5,
                            NazivGrada = "Amsterdam"
                        },
                        new
                        {
                            Id = 7,
                            DrzavaId = 6,
                            NazivGrada = "Istanbul"
                        },
                        new
                        {
                            Id = 8,
                            DrzavaId = 7,
                            NazivGrada = "Bec"
                        },
                        new
                        {
                            Id = 9,
                            DrzavaId = 8,
                            NazivGrada = "Minhen"
                        },
                        new
                        {
                            Id = 10,
                            DrzavaId = 9,
                            NazivGrada = "Pariz"
                        },
                        new
                        {
                            Id = 11,
                            DrzavaId = 10,
                            NazivGrada = "Madrid"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PutovanjeId")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PutovanjeId");

                    b.ToTable("Komentar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(4328),
                            KorisnikId = 3,
                            PutovanjeId = 1,
                            Sadrzaj = "Komentar1"
                        },
                        new
                        {
                            Id = 2,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7588),
                            KorisnikId = 4,
                            PutovanjeId = 1,
                            Sadrzaj = "Komentar2"
                        },
                        new
                        {
                            Id = 3,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7722),
                            KorisnikId = 5,
                            PutovanjeId = 2,
                            Sadrzaj = "Komentar3"
                        },
                        new
                        {
                            Id = 4,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7740),
                            KorisnikId = 3,
                            PutovanjeId = 2,
                            Sadrzaj = "Komentar4"
                        },
                        new
                        {
                            Id = 5,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7752),
                            KorisnikId = 3,
                            PutovanjeId = 3,
                            Sadrzaj = "Komentar5"
                        },
                        new
                        {
                            Id = 6,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7766),
                            KorisnikId = 6,
                            PutovanjeId = 5,
                            Sadrzaj = "Komentar6"
                        },
                        new
                        {
                            Id = 7,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7779),
                            KorisnikId = 4,
                            PutovanjeId = 8,
                            Sadrzaj = "Komentar7"
                        },
                        new
                        {
                            Id = 8,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7792),
                            KorisnikId = 6,
                            PutovanjeId = 8,
                            Sadrzaj = "Komentar8"
                        },
                        new
                        {
                            Id = 9,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7805),
                            KorisnikId = 5,
                            PutovanjeId = 9,
                            Sadrzaj = "Komentar9"
                        },
                        new
                        {
                            Id = 10,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(7818),
                            KorisnikId = 3,
                            PutovanjeId = 9,
                            Sadrzaj = "Komentar10"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.com",
                            Ime = "Mirnes",
                            KorisnickoIme = "tmirnes",
                            LozinkaHash = "Fcm514xjmNp/HVnC/upkWqW0G+0=",
                            LozinkaSalt = "YW55IGNhcm5hbCBwbGVhc3VyZQ==",
                            Prezime = "Turkovic",
                            Status = true,
                            Telefon = "061478951"
                        },
                        new
                        {
                            Id = 2,
                            Email = "amila@mail.com",
                            Ime = "Amila",
                            KorisnickoIme = "tamila",
                            LozinkaHash = "Fcm514xjmNp/HVnC/upkWqW0G+0=",
                            LozinkaSalt = "YW55IGNhcm5hbCBwbGVhc3VyZQ==",
                            Prezime = "Turkovic",
                            Status = true,
                            Telefon = "062479951"
                        },
                        new
                        {
                            Id = 3,
                            Email = "meho@mail.com",
                            Ime = "Meho",
                            KorisnickoIme = "mmeho",
                            LozinkaHash = "Fcm514xjmNp/HVnC/upkWqW0G+0=",
                            LozinkaSalt = "YW55IGNhcm5hbCBwbGVhc3VyZQ==",
                            Prezime = "Mehic",
                            Status = true,
                            Telefon = "061478951"
                        },
                        new
                        {
                            Id = 4,
                            Email = "suljo@mail.com",
                            Ime = "Suljo",
                            KorisnickoIme = "ssuljo",
                            LozinkaHash = "Fcm514xjmNp/HVnC/upkWqW0G+0=",
                            LozinkaSalt = "YW55IGNhcm5hbCBwbGVhc3VyZQ==",
                            Prezime = "Suljic",
                            Status = true,
                            Telefon = "0601478951"
                        },
                        new
                        {
                            Id = 5,
                            Email = "mujo@mail.com",
                            Ime = "Mujo",
                            KorisnickoIme = "mmujo",
                            LozinkaHash = "Fcm514xjmNp/HVnC/upkWqW0G+0=",
                            LozinkaSalt = "YW55IGNhcm5hbCBwbGVhc3VyZQ==",
                            Prezime = "Mujic",
                            Status = true,
                            Telefon = "0601478951"
                        },
                        new
                        {
                            Id = 6,
                            Email = "kemo@mail.com",
                            Ime = "Kemo",
                            KorisnickoIme = "kmujic",
                            LozinkaHash = "Fcm514xjmNp/HVnC/upkWqW0G+0=",
                            LozinkaSalt = "YW55IGNhcm5hbCBwbGVhc3VyZQ==",
                            Prezime = "Mujic",
                            Status = true,
                            Telefon = "0601478851"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");

                    b.HasData(
                        new
                        {
                            KorisnikUlogaId = 1,
                            DatumIzmjene = new DateTime(2021, 9, 4, 23, 29, 20, 896, DateTimeKind.Local).AddTicks(3920),
                            KorisnikId = 1,
                            UlogaId = 1
                        },
                        new
                        {
                            KorisnikUlogaId = 2,
                            DatumIzmjene = new DateTime(2021, 9, 4, 23, 29, 20, 909, DateTimeKind.Local).AddTicks(9149),
                            KorisnikId = 1,
                            UlogaId = 2
                        },
                        new
                        {
                            KorisnikUlogaId = 3,
                            DatumIzmjene = new DateTime(2021, 9, 4, 23, 29, 20, 909, DateTimeKind.Local).AddTicks(9347),
                            KorisnikId = 2,
                            UlogaId = 2
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.ListaZelja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PutovanjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PutovanjeId");

                    b.ToTable("ListaZelja");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KorisnikId = 3,
                            Opis = "Opis1",
                            PutovanjeId = 1
                        },
                        new
                        {
                            Id = 2,
                            KorisnikId = 4,
                            Opis = "Opis2",
                            PutovanjeId = 1
                        },
                        new
                        {
                            Id = 3,
                            KorisnikId = 5,
                            Opis = "Opis3",
                            PutovanjeId = 2
                        },
                        new
                        {
                            Id = 4,
                            KorisnikId = 3,
                            Opis = "Opis4",
                            PutovanjeId = 2
                        },
                        new
                        {
                            Id = 5,
                            KorisnikId = 3,
                            Opis = "Opis5",
                            PutovanjeId = 3
                        },
                        new
                        {
                            Id = 6,
                            KorisnikId = 6,
                            Opis = "Opis6",
                            PutovanjeId = 5
                        },
                        new
                        {
                            Id = 7,
                            KorisnikId = 4,
                            Opis = "Opis7",
                            PutovanjeId = 8
                        },
                        new
                        {
                            Id = 8,
                            KorisnikId = 6,
                            Opis = "Opis8",
                            PutovanjeId = 8
                        },
                        new
                        {
                            Id = 9,
                            KorisnikId = 5,
                            Opis = "Opis9",
                            PutovanjeId = 9
                        },
                        new
                        {
                            Id = 10,
                            KorisnikId = 3,
                            Opis = "Opis10",
                            PutovanjeId = 9
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Obavijesti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijesti");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(4709),
                            KorisnikId = 3,
                            Naziv = "Obavijest1",
                            Sadrzaj = "Sadrzaj1"
                        },
                        new
                        {
                            Id = 2,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8077),
                            KorisnikId = 4,
                            Naziv = "Obavijest2",
                            Sadrzaj = "Sadrzaj2"
                        },
                        new
                        {
                            Id = 3,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8364),
                            KorisnikId = 5,
                            Naziv = "Obavijest3",
                            Sadrzaj = "Sadrzaj3"
                        },
                        new
                        {
                            Id = 4,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8387),
                            KorisnikId = 3,
                            Naziv = "Obavijest4",
                            Sadrzaj = "Sadrzaj4"
                        },
                        new
                        {
                            Id = 5,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8400),
                            KorisnikId = 3,
                            Naziv = "Obavijest5",
                            Sadrzaj = "Sadrzaj5"
                        },
                        new
                        {
                            Id = 6,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8413),
                            KorisnikId = 6,
                            Naziv = "Obavijest6",
                            Sadrzaj = "Sadrzaj6"
                        },
                        new
                        {
                            Id = 7,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8426),
                            KorisnikId = 4,
                            Naziv = "Obavijest7",
                            Sadrzaj = "Sadrzaj7"
                        },
                        new
                        {
                            Id = 8,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8439),
                            KorisnikId = 6,
                            Naziv = "Obavijest8",
                            Sadrzaj = "Sadrzaj8"
                        },
                        new
                        {
                            Id = 9,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8451),
                            KorisnikId = 5,
                            Naziv = "Obavijest9",
                            Sadrzaj = "Sadrzaj9"
                        },
                        new
                        {
                            Id = 10,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 921, DateTimeKind.Local).AddTicks(8463),
                            KorisnikId = 3,
                            Naziv = "Obavijest10",
                            Sadrzaj = "Sadrzaj10"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("PutovanjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PutovanjeId");

                    b.ToTable("Ocjene");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(789),
                            KorisnikId = 3,
                            Ocjena = 4,
                            PutovanjeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(3948),
                            KorisnikId = 4,
                            Ocjena = 5,
                            PutovanjeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4078),
                            KorisnikId = 5,
                            Ocjena = 4,
                            PutovanjeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4093),
                            KorisnikId = 3,
                            Ocjena = 5,
                            PutovanjeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4106),
                            KorisnikId = 3,
                            Ocjena = 5,
                            PutovanjeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4118),
                            KorisnikId = 6,
                            Ocjena = 4,
                            PutovanjeId = 5
                        },
                        new
                        {
                            Id = 7,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4129),
                            KorisnikId = 4,
                            Ocjena = 5,
                            PutovanjeId = 8
                        },
                        new
                        {
                            Id = 8,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4142),
                            KorisnikId = 6,
                            Ocjena = 5,
                            PutovanjeId = 8
                        },
                        new
                        {
                            Id = 9,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4154),
                            KorisnikId = 5,
                            Ocjena = 4,
                            PutovanjeId = 9
                        },
                        new
                        {
                            Id = 10,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(4165),
                            KorisnikId = 3,
                            Ocjena = 5,
                            PutovanjeId = 9
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Prevoz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMjesta")
                        .HasColumnType("int");

                    b.Property<float>("CijenaPoMjestu")
                        .HasColumnType("real");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("TipPrevoza")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Prevoz");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrojMjesta = 35,
                            CijenaPoMjestu = 12f,
                            FirmaId = 1,
                            TipPrevoza = "drumski"
                        },
                        new
                        {
                            Id = 2,
                            BrojMjesta = 33,
                            CijenaPoMjestu = 11f,
                            FirmaId = 2,
                            TipPrevoza = "drumski"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Putovanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMjesta")
                        .HasColumnType("int");

                    b.Property<float>("CijenaPutovanja")
                        .HasColumnType("real");

                    b.Property<DateTime>("DatumDolaska")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPolaska")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("NazivPutovanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisPutovanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrevozId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SmjestajId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.HasIndex("PrevozId");

                    b.HasIndex("SmjestajId");

                    b.ToTable("Putovanja");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrojMjesta = 30,
                            CijenaPutovanja = 200f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 917, DateTimeKind.Local).AddTicks(7004),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 917, DateTimeKind.Local).AddTicks(5752),
                            GradId = 3,
                            NazivPutovanja = "Putovanje1",
                            OpisPutovanja = "Putovanjeee1",
                            PrevozId = 1,
                            SmjestajId = 3
                        },
                        new
                        {
                            Id = 2,
                            BrojMjesta = 35,
                            CijenaPutovanja = 150f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(3624),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(3523),
                            GradId = 4,
                            NazivPutovanja = "Putovanje2",
                            OpisPutovanja = "Putovanjeee2",
                            PrevozId = 2,
                            SmjestajId = 2
                        },
                        new
                        {
                            Id = 3,
                            BrojMjesta = 33,
                            CijenaPutovanja = 250f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(3936),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(3908),
                            GradId = 5,
                            NazivPutovanja = "Putovanje3",
                            OpisPutovanja = "Putovanjeee3",
                            PrevozId = 2,
                            SmjestajId = 1
                        },
                        new
                        {
                            Id = 4,
                            BrojMjesta = 33,
                            CijenaPutovanja = 220f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(3982),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(3966),
                            GradId = 6,
                            NazivPutovanja = "Putovanje4",
                            OpisPutovanja = "Putovanjeee4",
                            PrevozId = 1,
                            SmjestajId = 2
                        },
                        new
                        {
                            Id = 5,
                            BrojMjesta = 35,
                            CijenaPutovanja = 300f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4018),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4004),
                            GradId = 6,
                            NazivPutovanja = "Putovanje5",
                            OpisPutovanja = "Putovanjeee5",
                            PrevozId = 2,
                            SmjestajId = 1
                        },
                        new
                        {
                            Id = 6,
                            BrojMjesta = 35,
                            CijenaPutovanja = 180f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4056),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4042),
                            GradId = 3,
                            NazivPutovanja = "Putovanje6",
                            OpisPutovanja = "Putovanjeee6",
                            PrevozId = 2,
                            SmjestajId = 3
                        },
                        new
                        {
                            Id = 7,
                            BrojMjesta = 35,
                            CijenaPutovanja = 320f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4102),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4086),
                            GradId = 7,
                            NazivPutovanja = "Putovanje7",
                            OpisPutovanja = "Putovanjeee7",
                            PrevozId = 2,
                            SmjestajId = 2
                        },
                        new
                        {
                            Id = 8,
                            BrojMjesta = 35,
                            CijenaPutovanja = 320f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4131),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4121),
                            GradId = 10,
                            NazivPutovanja = "Putovanje8",
                            OpisPutovanja = "Putovanjeee8",
                            PrevozId = 1,
                            SmjestajId = 2
                        },
                        new
                        {
                            Id = 9,
                            BrojMjesta = 35,
                            CijenaPutovanja = 350f,
                            DatumDolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4163),
                            DatumPolaska = new DateTime(2021, 9, 4, 23, 29, 20, 918, DateTimeKind.Local).AddTicks(4154),
                            GradId = 11,
                            NazivPutovanja = "Putovanje9",
                            OpisPutovanja = "Putovanjeee9",
                            PrevozId = 1,
                            SmjestajId = 3
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojOsoba")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PutovanjeId");

                    b.ToTable("Rezervacija");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrojOsoba = 2,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 919, DateTimeKind.Local).AddTicks(4133),
                            Ime = "Rezervacija1",
                            KorisnikId = 3,
                            Napomena = "Napomena1",
                            PutovanjeId = 1,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 2,
                            BrojOsoba = 3,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1351),
                            Ime = "Rezervacija2",
                            KorisnikId = 4,
                            Napomena = "Napomena2",
                            PutovanjeId = 3,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 3,
                            BrojOsoba = 2,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1529),
                            Ime = "Rezervacija3",
                            KorisnikId = 5,
                            Napomena = "Napomena3",
                            PutovanjeId = 5,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 4,
                            BrojOsoba = 3,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1551),
                            Ime = "Rezervacija4",
                            KorisnikId = 3,
                            Napomena = "Napomena4",
                            PutovanjeId = 6,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 5,
                            BrojOsoba = 2,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1566),
                            Ime = "Rezervacija5",
                            KorisnikId = 4,
                            Napomena = "Napomena5",
                            PutovanjeId = 5,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 6,
                            BrojOsoba = 2,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1581),
                            Ime = "Rezervacija6",
                            KorisnikId = 6,
                            Napomena = "Napomena6",
                            PutovanjeId = 5,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 7,
                            BrojOsoba = 2,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1597),
                            Ime = "Rezervacija7",
                            KorisnikId = 4,
                            Napomena = "Napomena7",
                            PutovanjeId = 6,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 8,
                            BrojOsoba = 3,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1612),
                            Ime = "Rezervacija8",
                            KorisnikId = 3,
                            Napomena = "Napomena8",
                            PutovanjeId = 8,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 9,
                            BrojOsoba = 3,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1626),
                            Ime = "Rezervacija9",
                            KorisnikId = 4,
                            Napomena = "Napomena8",
                            PutovanjeId = 7,
                            Status = "Rezervisano"
                        },
                        new
                        {
                            Id = 10,
                            BrojOsoba = 5,
                            DatumRezervacije = new DateTime(2021, 9, 4, 23, 29, 20, 920, DateTimeKind.Local).AddTicks(1640),
                            Ime = "Rezervacija10",
                            KorisnikId = 6,
                            Napomena = "Napomena9",
                            PutovanjeId = 8,
                            Status = "Rezervisano"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Smjestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CijenaNocenja")
                        .HasColumnType("real");

                    b.Property<string>("NazivSmjestaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisSmjestaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TipSobe")
                        .HasColumnName("Tip_sobe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Smjestaj");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CijenaNocenja = 100f,
                            NazivSmjestaja = "Hotel",
                            OpisSmjestaja = "Hotel sa 5 zvjezdica. Ukljucen dorucak",
                            TipSobe = "trokrevetna"
                        },
                        new
                        {
                            Id = 2,
                            CijenaNocenja = 60f,
                            NazivSmjestaja = "Hotel",
                            OpisSmjestaja = "Hotel sa 4 zvjezdica.Ukljucen dorucak",
                            TipSobe = "dvokrevetna"
                        },
                        new
                        {
                            Id = 3,
                            CijenaNocenja = 40f,
                            NazivSmjestaja = "Hotel",
                            OpisSmjestaja = "Hotel sa 4 zvjezdica",
                            TipSobe = "dvkrevetna"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uloge");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "Admin",
                            Opis = "Administrator sistema"
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "Zaposleni",
                            Opis = "Ljudi koji su zaposleni u firmi"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Uplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Uplate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 922, DateTimeKind.Local).AddTicks(6439),
                            Iznos = 100.0,
                            RezervacijaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4604),
                            Iznos = 120.0,
                            RezervacijaId = 2
                        },
                        new
                        {
                            Id = 3,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4754),
                            Iznos = 150.0,
                            RezervacijaId = 3
                        },
                        new
                        {
                            Id = 4,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4776),
                            Iznos = 120.0,
                            RezervacijaId = 4
                        },
                        new
                        {
                            Id = 5,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4790),
                            Iznos = 150.0,
                            RezervacijaId = 5
                        },
                        new
                        {
                            Id = 6,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4802),
                            Iznos = 150.0,
                            RezervacijaId = 6
                        },
                        new
                        {
                            Id = 7,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4815),
                            Iznos = 180.0,
                            RezervacijaId = 7
                        },
                        new
                        {
                            Id = 8,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4827),
                            Iznos = 150.0,
                            RezervacijaId = 8
                        },
                        new
                        {
                            Id = 9,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4839),
                            Iznos = 180.0,
                            RezervacijaId = 9
                        },
                        new
                        {
                            Id = 10,
                            Datum = new DateTime(2021, 9, 4, 23, 29, 20, 923, DateTimeKind.Local).AddTicks(4851),
                            Iznos = 170.0,
                            RezervacijaId = 10
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Vodic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .HasColumnName("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontakt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Vodic");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ime = "Ime1",
                            Jmbg = "1457896541278",
                            Kontakt = "061475963",
                            Prezime = "Prezime1"
                        },
                        new
                        {
                            Id = 2,
                            Ime = "Ime2",
                            Jmbg = "1459896541278",
                            Kontakt = "062475963",
                            Prezime = "Prezime2"
                        },
                        new
                        {
                            Id = 3,
                            Ime = "Ime3",
                            Jmbg = "8959896541278",
                            Kontakt = "062495963",
                            Prezime = "Prezime3"
                        },
                        new
                        {
                            Id = 4,
                            Ime = "Ime4",
                            Jmbg = "8959896541277",
                            Kontakt = "062495964",
                            Prezime = "Prezime4"
                        },
                        new
                        {
                            Id = 5,
                            Ime = "Ime5",
                            Jmbg = "8959866541278",
                            Kontakt = "062495563",
                            Prezime = "Prezime5"
                        },
                        new
                        {
                            Id = 6,
                            Ime = "Ime6",
                            Jmbg = "8959866441278",
                            Kontakt = "061495963",
                            Prezime = "Prezime6"
                        },
                        new
                        {
                            Id = 7,
                            Ime = "Ime7",
                            Jmbg = "8959866441278",
                            Kontakt = "061499963",
                            Prezime = "Prezime7"
                        },
                        new
                        {
                            Id = 8,
                            Ime = "Ime8",
                            Jmbg = "1359866441278",
                            Kontakt = "0601495963",
                            Prezime = "Prezime8"
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.VodiciPutovanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PutovanjeId")
                        .HasColumnType("int");

                    b.Property<int>("VodicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.HasIndex("VodicId");

                    b.ToTable("VodiciPutovanja");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PutovanjeId = 1,
                            VodicId = 3
                        },
                        new
                        {
                            Id = 2,
                            PutovanjeId = 1,
                            VodicId = 4
                        },
                        new
                        {
                            Id = 3,
                            PutovanjeId = 2,
                            VodicId = 5
                        },
                        new
                        {
                            Id = 4,
                            PutovanjeId = 2,
                            VodicId = 3
                        },
                        new
                        {
                            Id = 5,
                            PutovanjeId = 3,
                            VodicId = 3
                        },
                        new
                        {
                            Id = 6,
                            PutovanjeId = 5,
                            VodicId = 6
                        },
                        new
                        {
                            Id = 7,
                            PutovanjeId = 8,
                            VodicId = 4
                        },
                        new
                        {
                            Id = 8,
                            PutovanjeId = 8,
                            VodicId = 6
                        },
                        new
                        {
                            Id = 9,
                            PutovanjeId = 9,
                            VodicId = 5
                        },
                        new
                        {
                            Id = 10,
                            PutovanjeId = 9,
                            VodicId = 3
                        });
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Firma", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Firma")
                        .HasForeignKey("GradId");
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Komentar", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Komentar")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Putovanja", "Putovanje")
                        .WithMany("Komentar")
                        .HasForeignKey("PutovanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.ListaZelja", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("ListaZelja")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Putovanja", "Putovanje")
                        .WithMany("ListaZelja")
                        .HasForeignKey("PutovanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Obavijesti", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Obavijesti")
                        .HasForeignKey("KorisnikId");
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Ocjene")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Putovanja", "Putovanje")
                        .WithMany("Ocjene")
                        .HasForeignKey("PutovanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Prevoz", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Firma", "Firma")
                        .WithMany("Prevoz")
                        .HasForeignKey("FirmaId");
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Putovanja", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Putovanja")
                        .HasForeignKey("GradId");

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Prevoz", "Prevoz")
                        .WithMany("Putovanja")
                        .HasForeignKey("PrevozId");

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Smjestaj", "Smjestaj")
                        .WithMany("Putovanja")
                        .HasForeignKey("SmjestajId");
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Rezervacija", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacija")
                        .HasForeignKey("KorisnikId");

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Putovanja", "Putovanje")
                        .WithMany("Rezervacija")
                        .HasForeignKey("PutovanjeId");
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.Uplate", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Rezervacija", "Rezervacija")
                        .WithMany("Uplate")
                        .HasForeignKey("RezervacijaId");
                });

            modelBuilder.Entity("TuristickaAgencija.WebAPI.Database.VodiciPutovanja", b =>
                {
                    b.HasOne("TuristickaAgencija.WebAPI.Database.Putovanja", "Putovanje")
                        .WithMany("VodiciPutovanja")
                        .HasForeignKey("PutovanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristickaAgencija.WebAPI.Database.Vodic", "Vodic")
                        .WithMany("VodiciPutovanja")
                        .HasForeignKey("VodicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
